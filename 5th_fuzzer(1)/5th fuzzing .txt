Fuzzer
 -소프트웨어 테스트 기법,입력받는 프로그램 있을때 입력값을 무작위로 생성해서 프로그램에 데이터 입력 주는 것, 
 - 왜 사용? 코드 충돌, 오류, 잠재적인 메모리 누수-> 발견 가능.
 - 보안 문제 테스트
 -strcpy 복사 함수(입력값 검증 안함)
 
취약점 찾는 두가지 방법  
 -black box
: 일반 상용 프로그램은 코드 제공 x 취약점 찾아내야 할때  -> 블랙박스 
  퍼징,리버싱 을 통해 취약점 찾는다. 
  빠른 점검 가능, 예상치 못한 취약점 발견 가능, 
  랜덤값을 주기 때문에 정확히 어디서 취약점이 발생하는지는 알기 어려움.  
 - white box
:  코드가 제공 되어 있는 것, 그 상황에서 취약점 찾아내는 방식 -> 화이트 박스 
  소스코드를 일일히 보거나 , 소스코드 자동 점검 툴이 있다.
  사건이 오래 걸림, 개발 환경 구성 필요 

bug>crash : 잘못된 흐름으로 가거나 메모리 누수 >exploitable bug: 해킹/크래시 중에서도 해킹이 가능함

Black box에서 퍼징 할 것이고 퍼징에는 두가지 방법 있다.
1. Dumb fuzzing #실습때 하는거 
: 무작위로 값 변형, 랜덤값을 막 생성(포맷에 맞게 분석 x)
 빠르게 퍼징 테스트 진행 가능, 수행시간이 오래 걸림 
2. Smart fuzzing 
: 파일 포맷에 맞게 분석한뒤 포맷을 맞추어서 변형하는 방식
 분석 시간이 오래 걸림, 수행 시간은 짧아짐.

Fuzzing process
: 샘플 선택(.mp3)->파일 변형(랜던값 생성해서 변형) -> 실행 -> 모니터링-> 크래시 덤프(오류가 나는 상황들을 저장해서 모아둠)/크래시가 나지 않으면 종료


 




 